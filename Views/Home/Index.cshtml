@using Dksh.ePOD.RazorComponents

@model Dksh.ePOD.Models.QFormModel

@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer

<div class="text-center">
    <h3>External Questionnaire</h3>
    <p>Please fill up this form and submit back to the system by clicking the "Submit" button in this form.</p>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-dismissible alert-success" role="alert">@Html.Raw(TempData["Success"].ToString())</div>
    TempData["Success"] = null;
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-dismissible alert-danger" role="alert">@Html.Raw(TempData["Error"].ToString())</div>
    TempData["Error"] = null;
}

@using (Html.BeginForm("Submit", "Home", FormMethod.Post, new { @id = "form1", @enctype = "multipart/form-data", @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.id)
    @Html.HiddenFor(m => m.fileToRemove)
    @Html.HiddenFor(m => m.status)
    @Html.HiddenFor(m => m.flowcountry)

    <div class="row">
        <div class="col-12 text-right">
            <img onclick="topFunction()" id="gototopBtn" />
            @if ((Model.status != Constants.RecordExtSubmit && Model.create_on_behalf == false) ||
(Model.status != Constants.RecordReqSubmit && Model.create_on_behalf == true))
            {
                <button type="submit" class="btn btn-primary" id="submitSave">Save</button>@Html.Raw("&nbsp;")
                <button type="submit" class="btn btn-primary" id="submitBtn">Submit</button>
            }
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-left">
            @Html.ValidationSummary("", new { @class = "error" })
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-left bar-back">
            <span style="font:bold">Responsible Parties</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="requestorName">Form owner (Requester)</label>
                <input type="text" class="form-control" id="requestor_name" name="requestor_name" value="@Model.requestor_name" readonly>
                @Html.HiddenFor(m => m.requestor_name)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="requestorEmail">Email address</label>
                <input type="email" value="@Model.requestor_email" class="form-control" id="requestor_email" name="requestor_email" aria-describedby="emailHelp" placeholder="Enter email" readonly>
                @Html.HiddenFor(m => m.requestor_email)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-left bar-back">
            <span style="font:bold">Basic Info to Create New TPI</span>
        </div>
    </div>
    <!--Section Basic Info to create new TPI-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Basic Info to Create New TPI</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_full_name">@localizer["Entity Full Name"]<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.basic_info_full_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.basic_info_full_name)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="basic_info_entity_type">Entity Type<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.basic_info_entity_type, Model.entity_type_ls.ToList(), "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.basic_info_entity_type)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_company_registration_no">Company registration number<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.basic_info_company_registration_no, new { @class = "form-control", @previous = "Model.basic_info_identification_no" })
                @Html.ValidationMessageFor(m => m.basic_info_company_registration_no)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_identification_no">Identification number/passport number<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.basic_info_identification_no, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.basic_info_identification_no)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_description_services">Description of the nature of services (to be) provided<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.basic_info_description_services, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.basic_info_description_services)
            </div>
        </div>
        <div class="col-6">

        </div>
    </div>
    <!-- TPI Contact Person-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">TPI Contact Person</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="contact_person_email">TPI Contact Person Full Name<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.contact_person_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.contact_person_name)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="contact_person_email">TPI Contact Person Email<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.contact_person_email, new { @class = "form-control", @email = "email" })
                @Html.ValidationMessageFor(m => m.contact_person_email)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="contact_person_telephone_no">TPI Contact Person Telephone No<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.contact_person_telephone_no, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.contact_person_telephone_no)
            </div>
        </div>
        <div class="col-6">
            &nbsp;
        </div>
    </div>

    <!-- Third Party Details-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Third Party Details</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <div class="form-group">
                    <label for="basic_info_entity_type2">Entity Type<span class="required-field"></span></label>
                    <div class="form-control" id="basic_info_entity_type2">@Model.basic_info_entity_type</div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="third_party_organization_type">Type Of Organization<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.third_party_organization_type, Model.organization_type_ls.ToList(), "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.third_party_organization_type)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            &nbsp;
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="third_party_organization_description">Description of organization (if Others)<span class="required-field"></span></label>
                @Html.TextAreaFor(m => m.third_party_organization_description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.third_party_organization_description)
            </div>
        </div>
    </div>
    <!--Entity Details-->
    <div class="row ent1">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Entity Details</span>
        </div>
    </div>
    <div class="row ent1">
        <div class="col-6">
            <div class="form-group">
                @if (Model.flowcountry != Constants.Malaysia)
                {
                    @Html.CountryBasedLabel(Model.flowcountry, "EntityNameLocal", "", "required", "entity_details_registered_name_other_language")
                    @Html.TextBoxFor(m => (m as QFormModelVN).entity_details_registered_name_other_language, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => (m as QFormModelVN).entity_details_registered_name_other_language)
                }
                else
                {
                    @Html.CountryBasedLabel(Model.flowcountry, "EntityNameLocal", "", "", "entity_details_registered_name_other_language")
                    @Html.TextBoxFor(m => (m as QFormModelMY).entity_details_registered_name_other_language, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => (m as QFormModelMY).entity_details_registered_name_other_language)
                }
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="entity_details_registered_address">Entity registered address<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.entity_details_registered_address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_registered_address)
            </div>
        </div>
    </div>
    <div class="row ent1">
        <div class="col-6">
            <div class="form-group">
                <label for="entity_details_registered_name">Entity registered name in English<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.entity_details_registered_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_registered_name)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="entity_details_business_address">Entity business address<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.entity_details_business_address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_business_address)
            </div>
        </div>
    </div>
    <div class="row ent1">
        <div class="col-6">
            <div class="form-group">
                <label for="websiteadress_field">Entity Website Address<span class="required-field"></span></label>
                @Html.TextBoxFor(m => m.websiteadress_field, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.websiteadress_field)
            </div>
        </div>
        <div class="col-6">
            &nbsp;
        </div>
    </div>
    <div class="row ent1">
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_company_registration_no">Company registration number<span class="required-field">*</span></label>
                <div class="form-control">@Model.basic_info_company_registration_no</div>
            </div>
        </div>
        <div class="col-6">
            @{await Html.RenderPartialAsync("_datePicker", new QFormEditParam()
                {
                    Label = "Date of incorporation",
                    IdName = "entity_details_date_incorporation",
                    ErrorMsg = "Date of incorporation is required.",
                    ExtraAttributes = "required",
                    Value = @Model.entity_details_date_incorporation.HasValue ? Model.entity_details_date_incorporation.Value.ToString("dd/MM/yyyy") : ""
                });}
        </div>
    </div>
    <div class="row ent1">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="entity_details_publicly_traded">Publicly traded<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.entity_details_publicly_traded, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_publicly_traded)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="entity_details_stock_exchange_name">Name of stock exchange (If any)<span class="required-field"></span></label>
                @Html.TextBoxFor(m => m.entity_details_stock_exchange_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_stock_exchange_name)
            </div>
        </div>
    </div>
    <div class="row ent1">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="entity_details_publicly_traded">Subsidiary of a publicly traded company<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.entity_details_subsidiary, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_subsidiary)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="entity_details_stock_exchange_name_parent">Name of stock exchange of parent company (If any)<span class="required-field"></span></label>
                @Html.TextBoxFor(m => m.entity_details_stock_exchange_name_parent, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.entity_details_stock_exchange_name_parent)
            </div>
        </div>
    </div>
    <!--Individual Details-->
    <div class="row ent2">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Individual details</span>
        </div>
    </div>
    <div class="row ent2">
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_name">Individual name in local language<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.individual_details_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.individual_details_name)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_permanent_address">Individual permanent residence address<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.individual_details_permanent_address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.individual_details_permanent_address)
            </div>
        </div>
    </div>
    <div class="row ent2">
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_name_other_language">Individual name in English<span class="required-field"></span></label>
                @Html.TextBoxFor(m => m.individual_details_name_other_language, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.individual_details_name_other_language)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_temporary_address">Individual temporary residence address<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.individual_details_temporary_address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.individual_details_temporary_address)
            </div>
        </div>
    </div>
    <div class="row ent2">
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_identification_no">Identification number/passport number<span class="required-field">*</span></label>
                <div class="form-control">@Model.basic_info_identification_no</div>
            </div>
        </div>
        <div class="col-6">
            @{await Html.RenderPartialAsync("_datePicker", new QFormEditParam()
                {
                    Label = "Date of birth",
                    IdName = "individual_details_date_birth",
                    ErrorMsg = "Date of birth is required.",
                    ExtraAttributes = "required",
                    Value = @Model.individual_details_date_birth.HasValue ? Model.individual_details_date_birth.Value.ToString("dd/MM/yyyy") : ""
                });}
        </div>
    </div>
    <div class="row ent2">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="individual_details_gender">Gender<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.individual_details_gender, Model.gender_ls.ToList(), "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.individual_details_gender)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_nationality">Nationality<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.individual_details_nationality, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.individual_details_nationality)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-left bar-back">
            <span style="font:bold">General Information</span>
        </div>
    </div>
    <!--Supporting document requirements-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Supporting document requirements</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @{await Html.RenderPartialAsync("_fileUploadCountry", new FileUploadParamCountry()
                {
                    Label = "Certified copy of business license/registration",
                    IdName = "businessLicenseFile",
                    ErrorMsg = "Business license/registration is required.",
                    ExtraAttributes = "required",
                    Value = Model.supporting_doc_business_license,
                    Field = "supporting_doc_business_license",
                    Url = Url.ActionLink("Download", "Home", new { @qid = Model.id, @field = "supporting_doc_business_license" }),
                    Tooltip = "Only supported file types: Excel, Word, PowerPoint, Images, PDF, Zip, 7Zip. Max size 28MB.",
                    Country = Model.flowcountry,
                    Resource = "BusinessReg"
                });}
        </div>
        <div class="col-6">
            @{await Html.RenderPartialAsync("_fileUpload", new FileUploadParam()
                {
                    Label = "Certified copy of Identification records",
                    IdName = "IdRecordFile",
                    ErrorMsg = "Individual identification is required.",
                    ExtraAttributes = "required",
                    Value = Model.supporting_doc_identification_records,
                    Field = "supporting_doc_identification_records",
                    Url = Url.ActionLink("Download", "Home", new { @qid = Model.id, @field = "supporting_doc_identification_records" }),
                    Tooltip = "Only supported file types: Excel, Word, PowerPoint, Images, PDF, Zip, 7Zip. Max size 28MB."
                });}
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @{await Html.RenderPartialAsync("_fileUpload", new FileUploadParam()
                {
                    Label = "Articles of association/incorporation",
                    IdName = "articleAssFile",
                    ErrorMsg = "Please provide a valid value.",
                    ExtraAttributes = "",
                    Value = Model.supporting_doc_articles_association,
                    Field = "supporting_doc_articles_association",
                    Url = Url.ActionLink("Download", "Home", new { @qid = Model.id, @field = "supporting_doc_articles_association" }),
                    Tooltip = "Only supported file types: Excel, Word, PowerPoint, Images, PDF, Zip, 7Zip. Max size 28MB.",
                    Country = Model.flowcountry //to show or hide based on country
                });}
        </div>
        <div class="col-6">
            &nbsp;
        </div>
    </div>
    <!--Ownership-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Ownership</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="ownership_1">Owners/shareholders of the company and their respective percentage of ownership<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="ownership_2">Name of parent company (Immediate) and their respective percentage of ownership<span class="required-field">*</span></label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.ownership_1, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ownership_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.ownership_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ownership_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_nationality">Name of parent company (Ultimate) and their respective percentage of ownership<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.CountryBasedLabel(Model.flowcountry, "Ownership", "", "required", "ownership_3")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.ownership_3, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ownership_3)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.ownership_4, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ownership_4)
            </div>
        </div>
    </div>
    <!-- Direcotrs and Key Management-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Directors and key management</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="directors_and_management_1">List of company directors (full names) and their respective positions<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="individual_details_nationality">List of key management and personnel providing services to DKSH and their respective positions<span class="required-field">*</span></label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.directors_and_management_1, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.directors_and_management_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.directors_and_management_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.directors_and_management_2)
            </div>
        </div>
    </div>
    <!--Business Information-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Business Information</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="business_info_1">Existing or former business partner?<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="business_info_2">Explanation of existing or former business relationship (relationship and since when)<span class="required-field">*</span></label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.DropDownListFor(m => m.business_info_1, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.business_info_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextBoxFor(m => m.business_info_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.business_info_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="business_info_3">Approx. annual turnover (Currency)<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.business_info_3, Model.currency_ls.ToList(), "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.business_info_3)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="business_info_4">Approx. annual turnover (Amount)<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.business_info_4, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.business_info_4)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="business_info_5">Number of employees<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.business_info_5, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.business_info_5)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="basic_info_description_services2">Description of the nature of services (to be) provided<span class="required-field">*</span></label>
                <div class="viewBox" id="basic_info_description_services2">@Model.basic_info_description_services</div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="business_info_6">Professional experience, expertise, qualification of the service provider<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.business_info_6, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.business_info_6)
            </div>
        </div>
        <div class="col-6">
            &nbsp;
        </div>
    </div>
    <!--Conflict of interest-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Conflict of interest</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="conflict_of_interest_1">Please declare any business conflict of interest situations with regards to your business with DKSH.<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.conflict_of_interest_1, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.conflict_of_interest_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="conflict_of_interest_2">Description of business conflict of interest situations<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.conflict_of_interest_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.conflict_of_interest_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="conflict_of_interest_3">Please declare any personal conflict of interest situations with any current, past or intended relationships with DKSH<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.conflict_of_interest_3, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.conflict_of_interest_3)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="conflict_of_interest_4">Description of personal conflict of interest situations<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.conflict_of_interest_4, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.conflict_of_interest_4)
            </div>
        </div>
    </div>
    <!--Relationship with public officials-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Relationships with public officials</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="relationships_public_officials_1">Does the Company, in providing services to DKSH, conduct business with government entities?<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.relationships_public_officials_1, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.relationships_public_officials_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="relationships_public_officials_2">Description of relationship with public officials<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.relationships_public_officials_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.relationships_public_officials_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="relationships_public_officials_3">Has any of your directors or key personnel, including their family members, held any position in a Government Entity, or as a political party official, or as a candidate for public office?<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.relationships_public_officials_3, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.relationships_public_officials_3)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="relationships_public_officials_4">Description of relationship with public officials<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.relationships_public_officials_4, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.relationships_public_officials_4)
            </div>
        </div>
    </div>
    <!--User of Third Parties-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Use of Third Parties</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="third_party_1">Will the Company make use of 3rd parties for services provided to DKSH<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="third_party_2">Description of 3rd parties used for services provided to DKSH  (Why and who are used)<span class="required-field">*</span></label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.DropDownListFor(m => m.third_party_1, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.third_party_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.third_party_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.third_party_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="third_party_3">Approx.percentage of the Company’s service offering to DKSH expected to be covered by these third parties<span class="required-field">*</span></label>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.third_party_3, new { @class = "form-control", @number = "number" })<span class="input-group-append">%</span>
                </div>
                @Html.ValidationMessageFor(m => m.third_party_3)
            </div>
            <div class="col-6">
                &nbsp;
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="third_party_4">Will these third parties have direct interaction with public officials for services provided to the Company for and on behalf of DKSH<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.third_party_4, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.third_party_4)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="third_party_5">Description of public officials involved in the services provided to the Company for and on behalf of DKSH (Why and who are used)<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.third_party_5, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.third_party_5)
            </div>
        </div>
    </div>
    <!--Compliance and ethics-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Compliance and ethics</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="compliance_and_ethics_1">Does the Company have a code of ethics or code of conduct?<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.compliance_and_ethics_1, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.compliance_and_ethics_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="compliance_and_ethics_2">
                    Does the Company have an anti-bribery/anti-corruption policy<span class="required-field">*</span>
                </label>
                @Html.DropDownListFor(m => m.compliance_and_ethics_2, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.compliance_and_ethics_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.CountryBasedLabel(Model.flowcountry, "CompanyEthic", "", "required", "compliance_and_ethics_3")
                @Html.DropDownListFor(m => m.compliance_and_ethics_3, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.compliance_and_ethics_3)
            </div>
        </div>
        <div class="col-6">
            @if (Model.flowcountry == Constants.Malaysia)
            {
                <label for="often_training">How often is this training done?<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => (m as QFormModelMY).often_training, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => (m as QFormModelMY).often_training)
            }

            @if (Model.flowcountry != Constants.Malaysia)
            {
                await Html.RenderPartialAsync("_fileUpload", new FileUploadParam()
                {
                    Label = "DKSH compliance commitment attachment",
                    IdName = "ethics4File",
                    ErrorMsg = "Please provide a valid value.",
                    ExtraAttributes = "required",
                    Value = Model.compliance_and_ethics_4,
                    Field = "compliance_and_ethics_4",
                    Url = Url.ActionLink("Download", "Home", new { @qid = Model.id, @field = "compliance_and_ethics_4" }),
                    Tooltip = "Only supported file types: Excel, Word, PowerPoint, Images, PDF, Zip, 7Zip. Max size 28MB."

                });
            }
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.CountryBasedLabel(Model.flowcountry, "Aware", "", "required", "compliance_and_ethics_5")
                @Html.DropDownListFor(m => m.compliance_and_ethics_5, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.compliance_and_ethics_5)
            </div>
        </div>
        @if (Model.flowcountry != Constants.Malaysia)
        {
            <div class="col-6">
                <div class="form-group">
                    <label for="compliance_and_ethics_6">Description of any conflict of interest in doing business with DKSH, including any of its owners/shareholders, directors or personnel<span class="required-field">*</span></label>
                    @Html.TextAreaFor(m => (m as QFormModelVN).compliance_and_ethics_6, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => (m as QFormModelVN).compliance_and_ethics_6)
                </div>
            </div>
        }
        else
        {
            <div class="col-6">
                <div class="form-group">
                </div>
            </div>
        }
    </div>
    @if (Model.flowcountry == Constants.Malaysia)
    {
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label data-toggle="tooltip" title="" for="compliance_and_ethics_7">
                        Did you provide or receive any form of payment or benefit or business advantage to or from employee or agents or any other related stakeholder of DKSH with respect to your intended business relationship with DKSH?<span class="required-field">*</span>
                    </label>
                    @Html.DropDownListFor(m => (m as QFormModelMY).compliance_and_ethics_7, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => (m as QFormModelMY).compliance_and_ethics_7)
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label data-toggle="tooltip" title="" for="anti_bribe_policy">
                        Does the Company require its sub-contractors to adhere to the Company Anti-Bribery/Anti-Corruption policies?<span class="required-field">*</span>
                    </label>
                    @Html.DropDownListFor(m => (m as QFormModelMY).anti_bribe_policy, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => (m as QFormModelMY).anti_bribe_policy)
                </div>
            </div>
        </div>
    }

    <!--Investigation, penalties, enforcement actions-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Investigations, penalties, enforcement actions</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="actions_1">Has the Company/any of its directors/ employees or has the Individual/any family members been involved in any criminal investigations relating to bribery, money laundering, fraud or other serious offences for the past five years?<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="actions_2">Description of criminal investigations (Who and why)<span class="required-field">*</span></label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.DropDownListFor(m => m.actions_1, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_1)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.actions_2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_2)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="actions_3">Has any of the Company’s personnel or has the Individual/any family members who will be providing services to DKSH been subjected to professional suspensions related to bribery, money laundering, fraud or other relevant offences for the past five years?<span class="required-field">*</span></label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="actions_4">Description of professional suspensions (Who and why)<span class="required-field">*</span></label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.DropDownListFor(m => m.actions_3, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_3)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.TextAreaFor(m => m.actions_4, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_4)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="actions_5">Has the Company or has the Individual been subjected to sanctions or penalties during the past five years?<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.actions_5, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_5)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="actions_6">Description of sanctions or penalties<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.actions_6, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_6)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="actions_7">
                    Are you or your Company subject to regulatory supervision?
                    <span class="required-field">*</span>
                </label>
                @Html.DropDownListFor(m => m.actions_7, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_7)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="actions_8">Description of regulatory supervision<span class="required-field">*</span></label>
                @Html.TextAreaFor(m => m.actions_8, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.actions_8)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-left bar-back">
            <span style="font:bold">Self Certification, Confirmation & Acknowledgement</span>
        </div>
    </div>
    <!--Self-certification-->
    <div class="row">
        <div class="col-12 text-left">
            <span class="badge badge-primary">Self-certification</span>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @{await Html.RenderPartialAsync("_fileUpload", new FileUploadParam()
                {
                    Label = "Completed and signed External Questionnaire ",
                    IdName = "cert1File",
                    ErrorMsg = "Please provide a valid value.",
                    ExtraAttributes = "",
                    Value = Model.self_certification_1,
                    Field = "self_certification_1",
                    Url = Url.ActionLink("Download", "Home", new { @qid = Model.id, @field = "self_certification_1" }),
                    Tooltip = "Only supported file types: Excel, Word, PowerPoint, Images, PDF, Zip, 7Zip. Max Size 28MB."
                });}
        </div>
        <div class="col-6">
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="self_certification_3">Name of TPI signing the questionnaire<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.self_certification_3, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.self_certification_3)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="self_certification_4">Title/Position/Function<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.self_certification_4, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.self_certification_4)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label data-toggle="tooltip" title="" for="self_certification_2">Person signing is the legal representative of TPI?<span class="required-field">*</span></label>
                @Html.DropDownListFor(m => m.self_certification_2, new[] { new SelectListItem { Text = "Yes", Value = "Yes" }, new SelectListItem { Text = "No", Value = "No" } }, "--Select One--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.self_certification_2)
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="self_certification_5">Reason for exception<span class="required-field">*</span></label>
                @Html.TextBoxFor(m => m.self_certification_5, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.self_certification_5)
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @{await Html.RenderPartialAsync("_fileUpload", new FileUploadParam()
                {
                    Label = "Supporting document (e.g. POA, LOA, email approval) ",
                    IdName = "cert6File",
                    ErrorMsg = "Please provide a valid value.",
                    ExtraAttributes = "required",
                    Value = Model.self_certification_6,
                    Field = "self_certification_6",
                    Url = Url.ActionLink("Download", "Home", new { @qid = Model.id, @field = "self_certification_6" }),
                    Tooltip = "Only supported file types: Excel, Word, PowerPoint, Images, PDF, Zip, 7Zip. Max size 28MB."
                });}
        </div>
        <div class="col-6">
            @{await Html.RenderPartialAsync("_datePicker", new QFormEditParam()
                {
                    Label = "Date of signing self-certification",
                    IdName = "self_certification_7",
                    ErrorMsg = "Date of signing self-certification is required.",
                    ExtraAttributes = "required",
                    Value = @Model.self_certification_7.HasValue ? Model.self_certification_7.Value.ToString("dd/MM/yyyy") : ""
                });}
        </div>
    </div>
    <div class="row">
        <div class="col-6">
        </div>
        <div class="col-6">
            &nbsp;
        </div>
    </div>
}

@section Scripts
{
    <script type="text/javascript" src="~/js/site05062021.js"></script>

    <script>
        var _malaysia = '@Constants.Malaysia';
        var _vietname = '@Constants.Vietnam';

        //Get the button:
        mybutton = document.getElementById("gototopBtn");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0; // For Safari
            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
        }
    </script>
}
